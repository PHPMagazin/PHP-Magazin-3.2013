<?phpnamespace MyApp;use Ratchet\MessageComponentInterface;use Ratchet\ConnectionInterface;class SchereSteinPapier implements MessageComponentInterface {    private $clients;    private $last_c;    private $last_m;    public function __construct() {        $this->clients = new \SplObjectStorage();    }    public function onOpen(ConnectionInterface $conn) {        $this->clients->attach($conn, 0);        $this->broadcast($conn, 'login', true);    }    public function onMessage(ConnectionInterface $from, $msg) { ... }    public function onClose(ConnectionInterface $conn) {        $this->clients->detach($conn);        $this->broadcast($conn, 'logout', true);    }    public function onError(ConnectionInterface $conn, \Exception $e) {        echo "Fehler: {$e->getMessage()}\n";        $conn->close();    }    private function broadcast(ConnectionInterface $from, $type, $msg) {        $id = spl_object_hash($from);        $msg = json_encode([ 'id' => $id, $type => $msg ]);        foreach ($this->clients as $client) {            $client->send($msg);        }    }}?>