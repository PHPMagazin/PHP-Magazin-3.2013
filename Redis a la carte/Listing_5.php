use Trivago\Component\NoSQLStore\StoreException;interface MapNavDataServiceInterface{    /**     * Easier declaration of the prefix.     *     * @var string     */    const REDIS_PREFIX = 'MapNav';    /**     * Easier declaration of the devider.     *     * @var string     */    const REDIS_KEY_DIVIDER = ':';    /**     * Retrieves one entry from the store.     *     * This method guarantees a return value of type MapData or     * null.     * @param string  $sLocale     * @param integer $iParentPathId     * @return \Trivago\Entity\Navigation\MapData     */    public function getData($sLocale, $iParentPathId);    /**     * Stores a new or existing entry in the store.     *     * @param string                             $sLocale     * @param integer                            $iParentPathId     * @param \Trivago\Entity\Navigation\MapData $oData     * @throws StoreException     * @return void     */    public function storeData($sLocale, $iParentPathId, MapData $oData);    /**     * Returns the detail data for a given detail key.     * This methods guarantees a return value of MapLink[] or empty array.     *     * @param string $sLocale     * @param integer $iParentPathId     * @return \Trivago\Entity\Navigation\MapLink[]     */    public function getDetailData($sLocale, $iParentPathId);    /**     * Stores a new entry on the list stack for the given key.     *     * @param string                             $sLocale     * @param integer                            $iParentPathId     * @param \Trivago\Entity\Navigation\MapLink $oDetailData     * @throws RedisException     * @return void     */    public function storeDetailData($sLocale, $iParentPathId, MapLink $oDetailData);     /**     * Key generation algorithm.     *     * @param string  $sLocale     * @param integer $iParentPathId     * @param bool    $bIgnoreMissingKeypart     * @return string     */    public function generateDataKey($sLocale, $iParentPathId, $bIgnoreMissingKeypart = false);    /**     * Detailkey generation algorithm.     *     * @param string  $sLocale     * @param integer $iParentPathId     * @param bool    $bIgnoreMissingKeypart     * @return string     */    public function generateDetailDataKey($sLocale, $iParentPathId, $bIgnoreMissingKeypart = false);}